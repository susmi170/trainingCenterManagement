package com.buyogo.tcm.controller;

import com.buyogo.tcm.dto.TrainingCenterDto;
import com.buyogo.tcm.service.TrainingCenterService;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import jakarta.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * This is the controller class dedicated for exposing endpoints for get all and save TrainingCenter
 */
@RestController
@RequestMapping("/trainingCenter")
public class TrainingCenterController {
    @Autowired
    TrainingCenterService trainingCenterService;


    @GetMapping("/hello")
    public String hello(){
        return "hello";
    }

    @Operation(summary = "Get All Training center in DB ")
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "Response will have all Training center details",
                    content = {@Content(mediaType = "application/json",
                            schema = @Schema(implementation = TrainingCenterDto.class))})})

    /**
     * API to get all training centers available in our local H2 DB, If no training center available it will return empty list
     *Endpoint : http://localhost:8082/trainingCenter/all
     * Without any training center response is empty list
     * Response :
     * []
     *WIth valid data
     * [
     *     {
     *         "id": 1,
     *         "centerName": "Test Center",
     *         "centerCode": "TCM_00000001",
     *         "studentCapacity": 100,
     *         "address": {
     *             "id": 1,
     *             "fullAddress": "Marathahalli,Bangalore",
     *             "city": "Bangalore",
     *             "state": "Karnataka",
     *             "pinCode": 560037
     *         },
     *         "courses": [
     *             "Java",
     *             " Python",
     *             " C++"
     *         ],
     *         "contactEmail": "test@gmail.COM",
     *         "contactPhone": "1234567890",
     *         "createdOn": "2024-05-20"
     *     },
     *     {
     *         "id": 2,
     *         "centerName": "Test Center 2",
     *         "centerCode": "TCM_00000002",
     *         "studentCapacity": 100,
     *         "address": {
     *             "id": 2,
     *             "fullAddress": "Marathahalli,Bangalore",
     *             "city": "Bangalore",
     *             "state": "Karnataka",
     *             "pinCode": 560037
     *         },
     *         "courses": [
     *             "Angular",
     *             " Python",
     *             " C++"
     *         ],
     *         "contactEmail": "test@gmail.COM",
     *         "contactPhone": "1234567890",
     *         "createdOn": "2024-05-20"
     *     }
     * ]
     *
     * @return
     */
    @GetMapping("/all")
    List<TrainingCenterDto> getAllTrainingCenters() {
        return trainingCenterService.getTrainingCenters();
    }

    @Operation(summary = "Save/Create a Training Center with details, ID will be autogenerated and will be available in response ")
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "Response will have the details of the saved Training Center",
                    content = {@Content(mediaType = "application/json",
                            schema = @Schema(implementation = TrainingCenterDto.class))}),
            @ApiResponse(responseCode = "400", description = "errorMessage\": \"{fieldName=fieldName is mandatory}",
                    content = @Content)}
    )
    /**
     * API to Save new training center in local in memory H2 DB with json payload, Endpoint should be on resource and the method should identity the operation
     * hence not adding save keyword in endpoint
     *Endpoint:http://localhost:8082/trainingCenter
     *
     *
     {
     "centerName": "Test Center",
     "centerCode": "TCM_00000001",
     "studentCapacity": 100,
     "address": {
     "fullAddress": "Marathahalli,Bangalore",
     "city": "Bangalore",
     "state": "Karnataka",
     "pinCode": 560037
     },
     "courses": [
     "Java",
     "Python",
     "C++"
     ],
     "contactEmail": "test@gmail.COM",
     "contactPhone":1234567890
     }


        Response :

     {
     "id": 1,
     "centerName": "Test Center",
     "centerCode": "TCM_00000001",
     "studentCapacity": 100,
     "address": {
     "id": 1,
     "fullAddress": "Marathahalli,Bangalore",
     "city": "Bangalore",
     "state": "Karnataka",
     "pinCode": 560037
     },
     "courses": [
     "Java",
     " Python",
     " C++"
     ],
     "contactEmail": "test@gmail.COM",
     "contactPhone": "1234567890",
     "createdOn": "2024-05-20"
     }
     *
     * @return
     */
    @PostMapping(produces = "application/json", consumes = "application/json")
    TrainingCenterDto saveTrainingCenter(@Valid  @RequestBody TrainingCenterDto trainingCenterDto) {
        return trainingCenterService.saveTrainingCenter(trainingCenterDto);
    }
}
